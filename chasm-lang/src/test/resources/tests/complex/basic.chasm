{
    int: 5 + 3,
    bool: true,
    string: "abc",
    ref: int,
    self: int,
    lambda: arg -> arg + 2,
    call: lambda(4),
    ternary: false ? "true" : "false",
    equals: 5 = 3,
    fibonacci: val -> val = 1 ? 1 : val = 2 ? 1 : fibonacci(val - 1) + fibonacci(val - 2),
    call_fib: fibonacci(10),
    curry: first -> second -> first - second,
    call_curry: curry(5)(3),
    list: [1, "two", false, { name: "object" }, null],
    list_index: list[1],
    map_member: list[3].name,
    map_index: list[3]["name"],
    concat: [1, 2] + [3, 4],
    list_concat: [1, 2] + list,
    filter_source: [{name: "hi"}, {name: "how"}, {name: "are"}, {name: "you"}],
    filter: filter_source[entry -> chars(entry.name)[0] = 'h'],
    compareWeird: arg -> arg > 3 = arg < 5 * -arg + 1000,
    test: arg -> arg.a && arg.b || arg.c && arg.d,
    test_call: test({ a: true, b: false, c: true, d: true }),
    binop: x -> (x & ~7) | 1,
    binop_call: binop(125),
    shift: x -> x << 1,
    shift_call: shift(125),
    shifting: x -> x << 1 ^ x >> 1,
    xmas: "Hello " + "World" + "!"
}
