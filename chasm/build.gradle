plugins {
    id 'java'
    id 'checkstyle'
    id 'maven-publish'
}

group 'org.quiltmc.chasm'
version '0.0.1'

sourceSets {
    testData {
        java {
            compileClasspath = sourceSets.main.output + configurations.testCompileClasspath
            runtimeClasspath = sourceSets.main.output + project.configurations.testRuntimeClasspath
        }
    }
}

compileJava {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

compileTestJava {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileTestDataJava {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

testClasses.dependsOn("testDataClasses")

checkstyle {
    toolVersion "9.1"
    ignoreFailures(false)
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":chasm-lang")

    implementation 'org.antlr:antlr4-runtime:4.9.3'

    implementation 'org.slf4j:slf4j-api:1.8.0-beta4'
    implementation 'org.ow2.asm:asm:9.2'
    implementation 'org.ow2.asm:asm-tree:9.2'
    implementation 'org.ow2.asm:asm-analysis:9.2'

    compileOnly 'org.jetbrains:annotations:23.0.0'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.ow2.asm:asm-util:9.2'
    testImplementation 'com.googlecode.java-diff-utils:diffutils:1.3.0'
    testImplementation 'org.reflections:reflections:0.10.2'
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = 'quiltSnapshot'
            url = System.getenv('SNAPSHOTS_URL')

            credentials {
                username = System.getenv('SNAPSHOTS_USERNAME')
                password = System.getenv('SNAPSHOTS_PASSWORD')
            }
        }
    }

    publications {
        snapshot(MavenPublication) {
            version = project.version + "-SNAPSHOT"

            from components.java
        }
    }
}
